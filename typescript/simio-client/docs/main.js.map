{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/account/account/account.component.html","webpack:///./src/app/components/account/account/account.component.scss","webpack:///./src/app/components/account/account/account.component.ts","webpack:///./src/app/components/account/public-account/public-account.component.html","webpack:///./src/app/components/account/public-account/public-account.component.scss","webpack:///./src/app/components/account/public-account/public-account.component.ts","webpack:///./src/app/components/account/user/user.component.html","webpack:///./src/app/components/account/user/user.component.scss","webpack:///./src/app/components/account/user/user.component.ts","webpack:///./src/app/components/account/users/users.component.html","webpack:///./src/app/components/account/users/users.component.scss","webpack:///./src/app/components/account/users/users.component.ts","webpack:///./src/app/components/auth/login/login.component.html","webpack:///./src/app/components/auth/login/login.component.scss","webpack:///./src/app/components/auth/login/login.component.ts","webpack:///./src/app/components/logging/log-provider.service.ts","webpack:///./src/app/components/logging/log/log.component.html","webpack:///./src/app/components/logging/log/log.component.scss","webpack:///./src/app/components/logging/log/log.component.ts","webpack:///./src/app/components/logging/logs/logs.component.html","webpack:///./src/app/components/logging/logs/logs.component.scss","webpack:///./src/app/components/logging/logs/logs.component.ts","webpack:///./src/app/components/menu/menu.component.html","webpack:///./src/app/components/menu/menu.component.scss","webpack:///./src/app/components/menu/menu.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/guards/auth-guard.guard.ts","webpack:///./src/app/core/material/material.module.ts","webpack:///./src/app/core/services/account.service.ts","webpack:///./src/app/core/services/auth.service.ts","webpack:///./src/app/core/services/friend-system.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LogsComponent } from './components/logging/logs/logs.component';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { AccountComponent } from './components/account/account/account.component';\nimport { AuthGuard } from './core/guards/auth-guard.guard';\nimport { UsersComponent } from './components/account/users/users.component';\nimport { UserComponent } from './components/account/user/user.component';\n\nconst routes: Routes = [{\n  path:\"logs\",\n  component: LogsComponent\n},{\n  path:\"login\",\n  component: LoginComponent\n},{\n  path:\"account\",\n  component: AccountComponent,\n  canActivate: [ AuthGuard ]\n},{\n  path:\"users\",\n  component: UsersComponent\n},{\n  path:\"user/:uid\",\n  component: UserComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div class=\\\"main\\\">\\n    <mat-sidenav-container class=\\\"main-menu\\\">\\n        <mat-sidenav mode=\\\"side\\\" #sidenav opened class=\\\"menu-sidebar\\\">\\n            <app-menu></app-menu>\\n        </mat-sidenav>\\n\\n        <mat-sidenav-content>\\n            <!-- <button class=\\\"menu-handler\\\" mat-button (click)=\\\"sidenav.toggle()\\\">toggle</button>\\n            {{sidenav.opened}} -->\\n            <router-outlet></router-outlet>\\n        </mat-sidenav-content>\\n    </mat-sidenav-container>\\n</div>\"","module.exports = \".main {\\n  height: 100%; }\\n\\n.main-menu {\\n  height: 100%; }\\n\\n.main-menu .menu-sidebar {\\n    width: 10%; }\\n\\n@media only screen and (max-width: 1200px) {\\n  .main-menu .menu-sidebar {\\n    width: 15%; } }\\n\\n@media only screen and (max-width: 1000px) {\\n  .main-menu .menu-sidebar {\\n    width: 20%; } }\\n\\n@media only screen and (max-width: 720px) {\\n  .main-menu .menu-sidebar {\\n    width: 67px; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYzpcXFVzZXJzXFxsYXJ5bVxccmVwb3NcXGFuZ3VsYXItY2xpZW50L3NyY1xcYXBwXFxhcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFXLEVBQUE7O0FBRWY7RUFDSSxZQUFXLEVBQUE7O0FBRGY7SUFHUSxVQUFTLEVBQUE7O0FBSWpCO0VBQ0k7SUFFUSxVQUFVLEVBQUEsRUFDYjs7QUFLVDtFQUNJO0lBRVEsVUFBVSxFQUFBLEVBQ2I7O0FBS1Q7RUFDSTtJQUVRLFdBQVUsRUFBQSxFQUNiIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1haW57XHJcbiAgICBoZWlnaHQ6MTAwJTtcclxufVxyXG4ubWFpbi1tZW51e1xyXG4gICAgaGVpZ2h0OjEwMCU7XHJcbiAgICAubWVudS1zaWRlYmFye1xyXG4gICAgICAgIHdpZHRoOjEwJTtcclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjAwcHgpIHtcclxuICAgIC5tYWluLW1lbnUge1xyXG4gICAgICAgIC5tZW51LXNpZGViYXIge1xyXG4gICAgICAgICAgICB3aWR0aDogMTUlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAwMHB4KSB7XHJcbiAgICAubWFpbi1tZW51IHtcclxuICAgICAgICAubWVudS1zaWRlYmFyIHtcclxuICAgICAgICAgICAgd2lkdGg6IDIwJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NzIwcHgpIHtcclxuICAgIC5tYWluLW1lbnV7XHJcbiAgICAgICAgLm1lbnUtc2lkZWJhcntcclxuICAgICAgICAgICAgd2lkdGg6NjdweDtcclxuICAgICAgICB9XHJcbiAgICB9ICAgXHJcbn1cclxuXHJcblxyXG5cclxuLy8gQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3MjBweCkge1xyXG4vLyAgICAgLm1haW4tbWVudSB7XHJcbi8vICAgICAgICAgLm1lbnUtc2lkZWJhciB7XHJcbi8vICAgICAgICAgICAgIHdpZHRoOiAyMCU7XHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgfVxyXG4vLyB9Il19 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LogsComponent } from './components/logging/logs/logs.component';\nimport { LogComponent } from './components/logging/log/log.component';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { CoreModule } from './core/core.module';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { AngularFireModule } from \"@angular/fire\"\nimport { environment } from 'src/environments/environment';\nimport { MenuComponent } from './components/menu/menu.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LogsComponent,\n    LogComponent,\n    LoginComponent,\n    MenuComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CoreModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div *ngIf=\\\"auth.user | async as user\\\" class=\\\"account-container\\\">\\n  <mat-card>\\n    <mat-card-header>\\n      <mat-card-title>\\n        {{user.displayName}}\\n      </mat-card-title>\\n      <mat-card-subtitle>\\n        {{user.email}}\\n      </mat-card-subtitle>\\n      <div mat-card-avatar class=avatar [style.background-image]=\\\"'url(' + user.photoUrl + ')'\\\"> </div>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <mat-card>\\n        <mat-card-header>\\n          <mat-card-title>Description</mat-card-title>\\n          <mat-card-subtitle>this is supposed to describe you</mat-card-subtitle>\\n          <div mat-card-avatar>\\n            <button mat-mini-fab>\\n              <div *ngIf=\\\"!editing; else save\\\">\\n                <mat-icon (click)=\\\"startEditing()\\\">\\n                  edit\\n                </mat-icon>\\n              </div>\\n            </button>\\n          </div>\\n        </mat-card-header>\\n        <mat-card-content>\\n          <div *ngIf=\\\"editing; else notEditing\\\">\\n            <form>\\n              <mat-form-field>\\n                <textarea #descriptionInput cdkTextareaAutosize cdkAutosizeMinRows=3 cols=30 maxlength=189\\n                  [cdkAutosizeMaxRows]=maxDescriptionRows matInput placeholder=description\\n                  [value]=\\\"user.description || defaultDescription(user.displayName)\\\"></textarea>\\n              </mat-form-field>\\n            </form>\\n          </div>\\n        </mat-card-content>\\n      </mat-card>\\n      <mat-list>\\n        <div *ngFor=\\\"let uid of (friends.uids)\\\">\\n          <app-public-account [mode]=\\\"'card'\\\" [uid]=\\\"uid\\\" [allowMenu]=\\\"true\\\" [menu]=\\\"publicAccountMenu\\\">\\n          </app-public-account>\\n\\n          <mat-menu #publicAccountMenu=\\\"matMenu\\\">\\n            <button mat-menu-item (click)=\\\"friends.removeFriend(uid)\\\">\\n              <mat-icon>person_add_disabled</mat-icon> Remove friend\\n            </button>\\n            <button mat-menu-item [routerLink]=\\\"[ '/user', uid ]\\\" routerLinkActive=\\\"active\\\">\\n              <mat-icon>account_circle</mat-icon>Profile\\n            </button>\\n            <div *ngIf=\\\"canCopy()\\\">\\n              <button mat-menu-item (click)=\\\"copyToClipboard(uid)\\\">\\n                <mat-icon>file_copy</mat-icon> Copy url \\n              </button>\\n            </div>\\n          </mat-menu>\\n        </div>\\n      </mat-list>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\\n\\n\\n<ng-template #save>\\n  <div *ngIf=\\\"auth.user | async as user\\\">\\n    <mat-icon (click)=\\\"saveDescription(user.uid)\\\">\\n      save\\n    </mat-icon>\\n  </div>\\n</ng-template>\\n\\n<ng-template #notEditing>\\n  <div *ngIf=\\\"auth.user | async as user\\\">\\n    <div *ngIf=\\\"user.description; else withoutDesc\\\">\\n      {{user.description}}\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<ng-template #withoutDesc>\\n  <div class=\\\"withoutDescContainer\\\">\\n    <div class=\\\"noDescInfo\\\">\\n      You dont have a description:\\n    </div>\\n    <button (click)=\\\"startEditing()\\\" color=primary mat-raised-button>\\n      Create your description\\n    </button>\\n  </div>\\n</ng-template>\"","module.exports = \".withoutDescContainer {\\n  text-align: center;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: column; }\\n\\n.noDescInfo {\\n  color: rgba(255, 255, 255, 0.5);\\n  font-size: 75%;\\n  margin: 3%; }\\n\\n.account-container {\\n  overflow-x: hidden; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50L2FjY291bnQvYzpcXFVzZXJzXFxsYXJ5bVxccmVwb3NcXGFuZ3VsYXItY2xpZW50L3NyY1xcYXBwXFxjb21wb25lbnRzXFxhY2NvdW50XFxhY2NvdW50XFxhY2NvdW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQWtCO0VBRWxCLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLHNCQUFzQixFQUFBOztBQUUxQjtFQUNJLCtCQUEyQjtFQUMzQixjQUFjO0VBQ2QsVUFBUyxFQUFBOztBQUViO0VBQ0ksa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FjY291bnQvYWNjb3VudC9hY2NvdW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLndpdGhvdXREZXNjQ29udGFpbmVye1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgLy8gbWFyZ2luOiAxNSU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG4ubm9EZXNjSW5mb3tcclxuICAgIGNvbG9yOnJnYmEoMjU2LDI1NiwyNTYsMC41KTtcclxuICAgIGZvbnQtc2l6ZTogNzUlO1xyXG4gICAgbWFyZ2luOjMlO1xyXG59XHJcbi5hY2NvdW50LWNvbnRhaW5lcntcclxuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcclxufSJdfQ== */\"","import { Component, OnInit, ViewChild, ElementRef, TemplateRef } from '@angular/core';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { filter } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { FriendSystemService } from 'src/app/core/services/friend-system.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n  /**\n   * a limit for how much the description textarea should resize\n   */\n  readonly maxDescriptionRows = 7\n\n  /**\n   * a flag indicating the state of the description editor\n   */\n  editing = false\n\n  /**\n   * used to get the value of the textarea from the dom\n   */\n  @ViewChild(\"descriptionInput\") currentDescription: ElementRef;\n\n  /**\n   * the component used to view and edit your account\n   * @param auth the auth service (injected)\n   * @param friends the friends service (injected)\n   * @param router the router service (injected)\n   */\n  constructor(public auth: AuthService,\n    public friends: FriendSystemService,\n    private router: Router) { }\n\n  /**\n   * runs when the component is inited\n   */\n  ngOnInit() {\n    //be sure to only show this if we are logged in\n    this.auth.user.pipe(\n      filter(\n        value => !value //only continues if the user is null\n      )\n    ).subscribe(\n      value => this.router.navigate([\"/login\"]) //reddirect to login\n    )\n  }\n\n  /**\n   * sets the editing flag to true\n   */\n  startEditing() {\n    this.editing = true\n  }\n\n  /**\n   * used to update the description of an user\n   * @param uid the uid of the user \n   */\n  saveDescription(uid: string) {\n    //disable the editing flag\n    this.editing = false\n\n    //save the description into firesotre\n    this.auth.updateUser(uid, {\n      description: this.currentDescription.nativeElement.value\n    })\n  }\n\n  /**\n   * used to get the default description for new users, \n   * beacuse template literals arent avabile inside html\n   * @param name the name to include in the description\n   * @returns the default description for new users\n   */\n  defaultDescription(name: string) {\n    return `Hi! My name is ${name}`\n  }\n\n\n  /**\n   * used to test the avability of the clipboard api\n   * @returns either true or false, representing the avability of the clipboard API\n   */\n  canCopy(){\n    //@ts-ignore\n    return !!navigator.clipboard\n  }\n\n  /**\n   * used to copy the url of an user to clipboard\n   * @param uid the uid of the user to copy link to keyboard\n   */\n  copyToClipboard(uid:string){\n    //@ts-ignore\n    navigator.clipboard.writeText(`${window.location.href}/user/${uid}`)\n  }\n}\n","module.exports = \"<div *ngIf=\\\"user | async as $user\\\">\\n  <div *ngIf=\\\"mode == 'card'; then card else list\\\"></div>\\n  <ng-template #card>\\n    <mat-card>\\n      <mat-card-header>\\n        <mat-card-title>\\n          {{$user.displayName}}\\n        </mat-card-title>\\n        <mat-card-subtitle>\\n          <div *ngIf=\\\"$user.description; else emailFallback\\\">\\n            {{$user.description}}\\n          </div>\\n        </mat-card-subtitle>\\n        <div mat-card-avatar [matMenuTriggerFor]=\\\"menu\\\" class=avatar\\n          [style.background-image]=\\\"'url(' + $user.photoUrl + ')'\\\">\\n\\n        </div>\\n      </mat-card-header>\\n    </mat-card>\\n  </ng-template>\\n\\n  <ng-template #emailFallback>\\n    {{$user.email}}\\n  </ng-template>\\n\\n</div>\\n\\n<ng-template #noUidError>\\n  Something went wrong...\\n</ng-template>\"","module.exports = \"#list-avatar {\\n  background-color: red; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50L3B1YmxpYy1hY2NvdW50L2M6XFxVc2Vyc1xcbGFyeW1cXHJlcG9zXFxhbmd1bGFyLWNsaWVudC9zcmNcXGFwcFxcY29tcG9uZW50c1xcYWNjb3VudFxccHVibGljLWFjY291bnRcXHB1YmxpYy1hY2NvdW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUkscUJBQXFCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2FjY291bnQvcHVibGljLWFjY291bnQvcHVibGljLWFjY291bnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbGlzdC1hdmF0YXJ7XHJcbiAgICAvLyBoZWlnaHQ6MTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxuICAgIC8vIHdpZHRoOjEwMCU7XHJcbn0iXX0= */\"","import { Component, OnInit, Input, TemplateRef, ElementRef } from '@angular/core';\nimport { AccountService } from 'src/app/core/services/account.service';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/core/services/interfaces/user';\n\n@Component({\n  selector: 'app-public-account',\n  templateUrl: './public-account.component.html',\n  styleUrls: ['./public-account.component.scss']\n})\nexport class PublicAccountComponent implements OnInit {\n\n  /**\n   * the uid of the displayed user\n   */\n  @Input(\"uid\") uid: string\n\n  /**\n   * the mode the data is displayed\n   * @default \"card\"\n   */\n  @Input(\"mode\") mode: string = \"card\"\n\n  @Input(\"allowMenu\") allowMenu = false\n  @Input(\"menu\") menu: ElementRef\n\n  /**\n   * the observable of the displayed user\n   */\n  user: Observable<User>\n\n  /**\n   * used to display the data about an user\n   * @param pas the public account servive (injected)\n   */\n  constructor(public pas: AccountService) { }\n\n  /**\n   * runs when the component is inited\n   */\n  ngOnInit() {\n    //get user by uid\n    if (this.uid) this.user = this.pas.getUser(this.uid)\n    else throw new Error(\"cannot display user without knowing its uid\")\n\n    //throw error if template is allowed but not setted\n    if (this.allowMenu && !this.menu) throw new Error(\"menu enabled but not asigned\")\n  }\n\n}\n\n\n","module.exports = \"<div>\\n  <div *ngIf=\\\"uid | async as $uid\\\">\\n    <app-public-account [uid]=\\\"$uid\\\" [allowMenu]=\\\"true\\\" [menu]=\\\"userMenu\\\"></app-public-account>\\n\\n    <mat-menu #userMenu=\\\"matMenu\\\">\\n      <button mat-menu-item>\\n        <div *ngIf=\\\"friends.uids && friends.uids.indexOf($uid) != -1; else addFriend\\\">\\n          <div (click)=\\\"friends.removeFriend($uid)\\\">\\n            <mat-icon>person_add_disabled</mat-icon> Remove friend\\n          </div>\\n        </div>\\n      </button>\\n    </mat-menu>\\n\\n    <ng-template #addFriend>\\n      <div (click)=\\\"friends.addFriend($uid)\\\">\\n        <mat-icon>person</mat-icon> Add friend\\n      </div>\\n    </ng-template>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudC91c2VyL3VzZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { AccountService } from 'src/app/core/services/account.service';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\nimport { User } from 'src/app/core/services/interfaces/user';\nimport { FriendSystemService } from 'src/app/core/services/friend-system.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  /**\n   * the main object containing the data about the user\n   */\n  user: Observable<User>\n\n  /**\n   * the observable for the uid\n   */\n  uid: Observable<string>\n\n  constructor(public auth: AuthService,\n    public pas: AccountService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public friends: FriendSystemService) { }\n\n  /**\n   * runs when the component is inited\n   */\n  ngOnInit() {\n    //get observable\n    this.uid = this.route.paramMap.pipe(\n      map((params:ParamMap) => {\n        return params.get(\"uid\")\n      })\n    )\n\n    this.user = this.route.paramMap.pipe(\n      switchMap((params:ParamMap) => {\n        return this.pas.getUser(params.get(\"uid\"))\n      })\n    )\n  }\n}\n\n\n\n\n","module.exports = \"<p>\\n  users works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudC91c2Vycy91c2Vycy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div>\\n  <div class=\\\"full\\\" color=\\\"primary\\\">\\n    <div *ngIf=\\\"auth.user | async; then authenticated else guest\\\">\\n\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<ng-template #authenticated>\\n //waiting for login\\n</ng-template>\\n\\n\\n<ng-template #guest>\\n  <mat-card class=\\\"login-cont\\\">\\n    <mat-card-header>\\n      <mat-card-title class=\\\"auth-title-container\\\">\\n        <div class=\\\"auth-title\\\">\\n          Login to get started\\n        </div>\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <mat-list>\\n        <div class=\\\"auth-list-container\\\">\\n          <mat-list-item>\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"auth.login('google')\\\" mat-button>\\n              Google auth\\n            </button>\\n          </mat-list-item>\\n          <mat-list-item>\\n            <button mat-raised-button color=\\\"basic\\\" (click)=\\\"auth.login('github')\\\" mat-button>\\n              Github auth\\n            </button>\\n          </mat-list-item>\\n        </div>\\n      </mat-list>\\n    </mat-card-content>\\n  </mat-card>\\n</ng-template>\"","module.exports = \".avatar {\\n  background-size: cover; }\\n\\n.full {\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  text-align: center;\\n  overflow: hidden; }\\n\\n.login-cont {\\n  width: 40%; }\\n\\n.mat-card-header, .auth-list-container, .mat-list-item {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  text-align: center;\\n  flex-direction: column; }\\n\\n@media only screen and (max-width: 700px) {\\n  .login-cont {\\n    width: 100%; } }\\n\\n@media only screen and (max-width: 400px) {\\n  .login-cont {\\n    height: 100%;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    text-align: center;\\n    flex-direction: column; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9hdXRoL2xvZ2luL2M6XFxVc2Vyc1xcbGFyeW1cXHJlcG9zXFxhbmd1bGFyLWNsaWVudC9zcmNcXGFwcFxcY29tcG9uZW50c1xcYXV0aFxcbG9naW5cXGxvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksc0JBQXNCLEVBQUE7O0FBRTFCO0VBQ0ksWUFBVztFQUNYLGFBQVk7RUFDWixzQkFBc0I7RUFDdEIsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0ksVUFBUyxFQUFBOztBQUViO0VBQ0ksYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLHNCQUFzQixFQUFBOztBQUcxQjtFQUNJO0lBQ0ksV0FBVSxFQUFBLEVBQ2I7O0FBRUw7RUFDSTtJQUNJLFlBQVc7SUFDWCxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsc0JBQXNCLEVBQUEsRUFDekIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYXZhdGFye1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxufVxyXG4uZnVsbHtcclxuICAgIGhlaWdodDoxMDAlO1xyXG4gICAgZGlzcGxheTpmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5sb2dpbi1jb250e1xyXG4gICAgd2lkdGg6NDAlO1xyXG59XHJcbi5tYXQtY2FyZC1oZWFkZXIsLmF1dGgtbGlzdC1jb250YWluZXIsLm1hdC1saXN0LWl0ZW17XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3MDBweCl7XHJcbiAgICAubG9naW4tY29udHtcclxuICAgICAgICB3aWR0aDoxMDAlO1xyXG4gICAgfVxyXG59XHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpe1xyXG4gICAgLmxvZ2luLWNvbnR7XHJcbiAgICAgICAgaGVpZ2h0OjEwMCU7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from \"src/app/core/services/auth.service\"\nimport { combineLatest, map, filter } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public auth: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.auth.user.pipe(\n      filter(\n        value => !!value\n      )\n    ).subscribe(\n      value => this.router.navigate([\"/account\"])\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\"\nimport { Observable } from 'rxjs';\nimport { log } from './interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogProviderService {\n\n  readonly baseUrl = \"http://localhost:8000\"\n  readonly path = \"logs\"\n\n  constructor(private http: HttpClient) { }\n\n  public getLogs():Observable<log[]>{\n    return this.http.get<log[]>(`${this.baseUrl}/${this.path}`)\n  }\n}\n","module.exports = \"<mat-card class=\\\"logo-mat-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>{{data.title}}</mat-card-title>\\n  </mat-card-header>\\n\\n  <mat-card-content>\\n    {{data.body}}\\n  </mat-card-content>\\n</mat-card>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9nZ2luZy9sb2cvbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { log } from '../interfaces';\n\n@Component({\n  selector: 'app-log',\n  templateUrl: './log.component.html',\n  styleUrls: ['./log.component.scss']\n})\nexport class LogComponent implements OnInit {\n  @Input() data: log \n  \n  constructor() { }\n\n  ngOnInit() {\n    console.log(this.data)\n  }\n\n}\n","module.exports = \"<div class=\\\"logs-container\\\">\\n  <div>\\n    <div class=\\\"log-innter-container\\\" *ngFor=\\\"let log of logs | async\\\">\\n      <app-log [data]=\\\"log\\\"></app-log>\\n    </div>\\n  </div>\\n  <div class=\\\"more-logs\\\">\\n    More may or may not be logged later!\\n  </div>\\n</div>\"","module.exports = \".more-logs {\\n  width: 100%;\\n  text-align: center;\\n  color: rgba(255, 255, 255, 0.5);\\n  font-size: 75%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dnaW5nL2xvZ3MvYzpcXFVzZXJzXFxsYXJ5bVxccmVwb3NcXGFuZ3VsYXItY2xpZW50L3NyY1xcYXBwXFxjb21wb25lbnRzXFxsb2dnaW5nXFxsb2dzXFxsb2dzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVTtFQUNWLGtCQUFrQjtFQUNsQiwrQkFBMEI7RUFDMUIsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9sb2dnaW5nL2xvZ3MvbG9ncy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tb3JlLWxvZ3N7XHJcbiAgICB3aWR0aDoxMDAlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6cmdiYSgyNTYsMjU2LDI1NiwuNSk7XHJcbiAgICBmb250LXNpemU6IDc1JTtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { log } from '../interfaces';\nimport { LogProviderService } from \"../log-provider.service\"\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.scss']\n})\nexport class LogsComponent implements OnInit {\n\n  logs: Observable<log[]>\n\n  constructor(private source: LogProviderService) { }\n\nngOnInit() {\n  this.logs = this.source.getLogs()\n}\n\n}\n","module.exports = \"<div class=\\\"full\\\" color=\\\"primary\\\">\\n  <mat-list>\\n    <mat-list-item>\\n      <div class=\\\"avatar-wrapper\\\">\\n        <div *ngIf=\\\"auth.user | async; then authenticated else guest\\\"></div>\\n      </div>\\n    </mat-list-item>\\n    <div *ngFor=\\\"let menuRoute of menuRoutes\\\">\\n      <a [routerLink]=\\\"menuRoute.path\\\" matTooltipPosition=\\\"after\\\" [matTooltip]=\\\"menuRoute.description\\\">\\n        <mat-list-item>\\n          <h4 mat-line class=\\\"menu-item-name\\\">{{menuRoute.name}}</h4>\\n          <mat-icon mat-list-icon>{{menuRoute.icon}}</mat-icon>\\n        </mat-list-item>\\n      </a>\\n    </div>\\n  </mat-list>\\n</div>\\n\\n\\n<mat-menu #accMenu=\\\"matMenu\\\">\\n  <button mat-menu-item (click)=\\\"auth.logout()\\\">\\n    <mat-icon>arrow_right_alt</mat-icon>\\n    <span>Logout</span>\\n  </button>\\n  <button mat-menu-item>\\n    <mat-icon>account_circle</mat-icon>\\n    <span>Profile</span>\\n  </button>\\n</mat-menu>\\n\\n\\n<ng-template #authenticated>\\n  <div *ngIf=\\\"auth.user | async as user\\\">\\n    <div mat-card-avatar class=avatar [style.background-image]=\\\"'url(' + user.photoUrl + ')'\\\"\\n      [matMenuTriggerFor]=\\\"accMenu\\\">\\n    </div>\\n  </div>\\n</ng-template>\\n\\n\\n<ng-template #guest>\\n  <button mat-mini-fab class=\\\"menu-login\\\">\\n    <mat-icon>person</mat-icon>\\n  </button>\\n</ng-template>\"","module.exports = \".avata-wrapper {\\n  display: flex;\\n  justify-content: center;\\n  flex-direction: column;\\n  align-items: center; }\\n\\na {\\n  text-decoration: none;\\n  color: white;\\n  font-style: normal; }\\n\\n@media only screen and (max-width: 720px) {\\n  .menu-item-name {\\n    opacity: 0;\\n    width: 0px;\\n    height: 0px; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9tZW51L2M6XFxVc2Vyc1xcbGFyeW1cXHJlcG9zXFxhbmd1bGFyLWNsaWVudC9zcmNcXGFwcFxcY29tcG9uZW50c1xcbWVudVxcbWVudS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsc0JBQXNCO0VBQ3RCLG1CQUFtQixFQUFBOztBQUV2QjtFQUNJLHFCQUFxQjtFQUNyQixZQUFXO0VBQ1gsa0JBQWtCLEVBQUE7O0FBRXRCO0VBQ0k7SUFDSSxVQUFVO0lBQ1YsVUFBVTtJQUNWLFdBQVcsRUFBQSxFQUNkIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9tZW51L21lbnUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYXZhdGEtd3JhcHBlcntcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbmF7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBjb2xvcjp3aGl0ZTtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxufVxyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NzIwcHgpIHtcclxuICAgIC5tZW51LWl0ZW0tbmFtZXtcclxuICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgIHdpZHRoOiAwcHg7XHJcbiAgICAgICAgaGVpZ2h0OiAwcHg7XHJcbiAgICB9ICAgIFxyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\ninterface MenuRoute{\n  path:string;\n  icon:string;\n  name:string;\n  description?:string;\n}\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n\n  menuRoutes:MenuRoute[] = [{\n    path:\"account\",\n    icon:\"person\",\n    name:\"account\",\n    description:\"all about you\"\n  },{\n    path:\"logs\",\n    icon:\"library_books\",\n    name:\"logs\",\n    description:\"server logs\"\n  }]\n\n  constructor( private auth:AuthService ) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from './material/material.module';\nimport { AngularFireAuthModule } from \"@angular/fire/auth\"\nimport { AngularFirestoreModule } from \"@angular/fire/firestore\"\nimport { AuthService } from \"./services/auth.service\";\nimport { MenuComponent } from '../components/menu/menu.component';\nimport { AccountComponent } from '../components/account/account/account.component';\nimport { PublicAccountComponent } from '../components/account/public-account/public-account.component';\nimport { UsersComponent } from '../components/account/users/users.component';\nimport { UserComponent } from '../components/account/user/user.component'\nimport { AppRoutingModule } from '../app-routing.module';\n\n@NgModule({\n  declarations: [AccountComponent, PublicAccountComponent, UsersComponent, UserComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    AppRoutingModule\n  ],\n  exports: [\n    MaterialModule\n  ],\n  providers: [\n    AuthService\n  ]\n})\nexport class CoreModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { take, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private auth: AuthService, private router: Router) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.auth.user.pipe(\n      take(1),\n      map(user => !!user),\n      tap(loggedIn => {\n        if (!loggedIn){\n          console.log(\"acces denied\")\n          this.router.navigate([\"/login\"])\n        }\n      })\n    )\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from \"@angular/material/input\"\nimport { MatFormFieldModule } from \"@angular/material/form-field\"\nimport { MatIconModule, MatIcon } from \"@angular/material/icon\"\nimport { MatToolbarModule } from \"@angular/material/toolbar\"\nimport { MatSidenavModule } from \"@angular/material/sidenav\"\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatGridListModule } from '@angular/material/grid-list'\nimport { MatListModule } from '@angular/material/list';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDividerModule } from '@angular/material/divider';\n\nconst list = [\n  CommonModule,\n  MatButtonModule,\n  MatCardModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatMenuModule,\n  MatGridListModule,\n  MatListModule,\n  MatTooltipModule,\n  MatDividerModule\n]\n\n@NgModule({\n  declarations: [],\n  imports: list,\n  exports: list\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { AngularFirestore } from \"@angular/fire/firestore\"\nimport { User } from './interfaces/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  /**\n   * the map for caching users\n   */\n  private users: Map<string,Observable<User>> = new Map()\n\n  /**\n   * Used to get public info about users\n   * @param afs angularfirestore (injected)\n   */\n  constructor(private afs:AngularFirestore) { }\n\n  /**\n   * Used to get an user knowing its id\n   * @param uid The id of the user requested\n   * @returns the user observable\n   * @example getUser(\"438239472433\")\n   */\n  getUser(uid : string):Observable<User>{\n    //check to see if we already have the observable for the user\n    if (this.users.get(uid)) return this.users.get(uid)\n\n    //if we dont have it than get it from the db\n    const user = this.afs.doc<User>(`users/${uid}`).valueChanges()\n\n    //cache the observable in the map\n    this.users.set(uid,user)\n\n    //return the user\n    return user\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs'\nimport { switchMap } from \"rxjs/operators\"\nimport { AngularFireAuth } from \"@angular/fire/auth\"\nimport { AngularFirestore, AngularFirestoreDocument } from \"@angular/fire/firestore\"\nimport { Router } from '@angular/router'\nimport * as firebase from 'firebase';\nimport { User } from './interfaces/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  user: Observable<User>\n  providers: {\n    [key: string]: any\n  }\n  persistence = firebase.auth.Auth.Persistence.LOCAL\n\n  constructor(\n    private auth: AngularFireAuth,\n    private afs: AngularFirestore,\n    private router: Router) {\n    this.user = this.auth.authState.pipe(\n      switchMap(\n        (user: User) => {\n          // console.log(`User:${user}`)\n          if (user) {\n            // console.log(user)\n            return this.afs.doc<User>(`users/${user.uid}`).valueChanges()\n          }\n          return of(null)\n        }\n      ))\n    this.providers = {\n      \"google\": () => new firebase.auth.GoogleAuthProvider(),\n      \"github\": () => new firebase.auth.GithubAuthProvider(),\n      \"facebook\": () => new firebase.auth.FacebookAuthProvider()\n    }\n  }\n  async rawLogin(email: string, password: string) {\n    const credential = await this.auth.auth.signInWithEmailAndPassword(email, password)\n    return this.updateUserData(credential.user)\n  }\n\n  async login(provider: string) {\n    try {\n      if (!this.providers[provider])\n        throw new Error(\"unknown provider\")\n      await this.auth.auth.setPersistence(this.persistence)\n      const credential = await this.auth.auth.signInWithPopup(this.providers[provider]())\n      this.updateUserData(credential.user)\n    }\n    catch (err) {\n      console.error(err)\n    }\n  }\n\n  updateUserData(user: firebase.User) {\n\n    const userRef: AngularFirestoreDocument<User> = this.afs.doc(`users/${user.uid}`)\n\n    const data: User = {\n      uid: user.uid,\n      email: user.email,\n      photoUrl: user.photoURL,\n      displayName: user.displayName\n    }\n\n    return userRef.set(data, { merge: true })\n  }\n\n  /**\n   * used to update the user\n   * @param uid the id of the user to update\n   * @param data the data to update nside the user\n   */\n  updateUser(uid: string, data: Partial<User>): Promise<void> {\n    const userRef: AngularFirestoreDocument<User> = this.afs.doc(`users/${uid}`)\n    return userRef.update(data)\n  }\n\n  logout() {\n    this.auth.auth.signOut()\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { User } from './interfaces/user';\nimport { AuthService } from './auth.service';\nimport { AccountService } from './account.service';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FriendSystemService {\n\n  friends: Observable<User>[]\n  uids: string[]\n\n  /**\n   * the system used to querry friends\n   * @param afs the angular firestore db (injected)\n   */\n  constructor(private auth: AuthService,\n    private afs: AngularFirestore,\n    private pas: AccountService) {\n\n    //subscribe to the user observable\n    this.auth.user.subscribe(\n      user => {\n\n        if (!user){\n          this.friends = []\n          this.uids = []\n        }\n\n        //in case it doesnt have any friends make it an epty array\n        if (!user.friends)\n          return this.auth.updateUser(user.uid, {\n            friends: []\n          })\n\n        //update the user list\n        this.uids = user.friends\n        this.friends = this.uids.map((uid: string) => this.pas.getUser(uid))\n      }\n    )\n  }\n\n  /**\n   * used to remove friends\n   * @param uid the uid of the friend to remove\n   * @throws UndefinedFriendError when unable to remove friend, because it isnt in the friend list\n   * @returns a promise resolving after the data is succesfully saved to the database\n   */\n  removeFriend(uid: string): Promise<Observable<User>[]> {\n    return new Promise((resolve, reject) => {\n      //check if uid is inside the friend list\n      if (this.uids.indexOf(uid) == -1)\n        reject(`UndefinedFriendError: unable to remove friend ${uid}, because it isnt in the friend list`)\n\n      //subscirbe to the user (and only take one)\n      this.auth.user.pipe(\n        take(1)\n      ).subscribe(\n        async (user) => {\n          //remove the friend from the db\n          await this.auth.updateUser(user.uid, {\n            friends: this.uids.filter(value => value != uid)\n          })\n          resolve(this.friends)\n        }\n      )\n    })\n  }\n\n  /**\n   * used to add a friend\n   * @param uid the uid of the friend to add\n   */\n  addFriend(uid: string): Promise<Observable<User>[]> {\n    //return a promise\n    return new Promise((resolve, reject) => {\n      //just some client side security \n      //(i have to also add back end security rules)\n      if (this.uids.indexOf(uid) != -1)\n        reject(`InvalidNewFriendError: cannot add friend with uid ${uid}. A friend with the same uid already exists`)\n\n      //subscribe to the user observable to get the uid (and only take 1)\n      this.auth.user.pipe(\n        take(1)\n      ).subscribe(async (user) => {\n        \n        //save it into the db\n        await this.auth.updateUser(user.uid,{\n          friends: [...this.uids,uid]\n        })\n        resolve(this.friends)\n      })\n    })\n  }\n}\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase:{\n    apiKey: \"AIzaSyBMhf35HijKKSRZdRYt_eBNLGadhQKdZVY\",\n    authDomain: \"planets-io.firebaseapp.com\",\n    databaseURL: \"https://planets-io.firebaseio.com\",\n    projectId: \"planets-io\",\n    storageBucket: \"planets-io.appspot.com\",\n    messagingSenderId: \"209812924936\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}